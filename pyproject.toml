[project]
name = "quart-sqlalchemy"
version = "3.0.4"
description = "SQLAlchemy for humans, with framework adapter for Quart."
authors = [
    {name = "Joe Black", email = "me@joeblack.nyc"},
]
dependencies = [
    "quart<0.20.0,>=0.18.3",
    "werkzeug<3.1.0,>=2.2.0",
    "blinker<1.7,>=1.5",
    "SQLAlchemy[asyncio]<2.1.0,>=2.0.0",
    "SQLAlchemy-Utils",
    "anyio>=3.0.0,<4",
    "pydantic~=2.5.3",
    "tenacity~=8.0.1",
    "sqlapagination",
    "exceptiongroup",
]
requires-python = ">=3.8"
readme = "README.rst"
license = {text = "MIT"}

[project.urls]
"Homepage" = "https://github.com/joeblackwaslike/quart-sqlalchemy"
"Bug Tracker" = "https://github.com/joeblackwaslike/quart-sqlalchemy/issues"


[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.4.3",
    # "pytest-asyncio~=0.20.3",
    "pytest-asyncio @ https://github.com/joeblackwaslike/pytest-asyncio/releases/download/v0.20.4.dev42/pytest_asyncio-0.20.4.dev42-py3-none-any.whl",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "coverage[toml]>=7.3.2",
    "aiosqlite>=0.19.0",
    "pre-commit>=3.5.0",
    "tox>=4.11.3",
    "tox-pdm>=0.7.0",
    "mypy>=1.7.0",
    "ruff>=0.1.5",
]


[tool.pdm.build]
source-includes = [
    "docs/",
    "tests/",
    "CHANGES.rst",
    "pdm.lock",
    "tox.ini",
]
excludes = [
    "docs/_build",
]

[tool.pytest.ini_options]
addopts = "-rsx --tb=short --loop-scope session"
testpaths = ["tests"]
filterwarnings = [
    "error",
    # Several pending fixes to be a well-behaved pydantic 2.0 user
    "ignore:.*The `parse_obj` method is deprecated.*:pydantic.warnings.PydanticDeprecatedSince20",
    "ignore:.*The `dict` method is deprecated; use `model_dump` instead.*:pydantic.warnings.PydanticDeprecatedSince20",
    "ignore:.*Support for class-based `config` is deprecated, use ConfigDict instead.*:pydantic.warnings.PydanticDeprecatedSince20",
    "ignore:.*Pydantic V1 style `@root_validator` validators are deprecated.*:pydantic.warnings.PydanticDeprecatedSince20",
    "ignore:.*Field .* has conflict with protected namespace \"model_\".*:UserWarning",
]
asyncio_mode = "auto"
py311_task = true
log_cli = true

[tool.coverage.run]
branch = true
source = ["src", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.isort]
profile = "black"
src_paths = ["src", "tests", "examples"]
force_single_line = true
use_parentheses = true
atomic = true
lines_after_imports = 2
line_length = 100
order_by_type = false
known_first_party = ["quart_sqlalchemy", "tests"]

[tool.mypy]
python_version = "3.7"
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
files = ["src/quart_sqlalchemy", "tests"]
show_error_codes = true
pretty = true
strict = true
# db.Model attribute doesn't recognize subclassing
disable_error_code = ["name-defined"]
# db.Model is Any
disallow_subclassing_any = false
allow_untyped_globals = true
allow_untyped_defs = true
allow_untyped_calls = true

[[tool.mypy.overrides]]
module = [
    "cryptography.*",
    "importlib_metadata.*",
]
ignore_missing_imports = true

[tool.pylint.messages_control]
max-line-length = 100
disable = ["missing-docstring", "protected-access"]

[tool.flakeheaven]
baseline = ".flakeheaven_baseline"
exclude = ["W503"]

[tool.flakeheaven.plugins]
"flake8-*" = ["+*"]
"flake8-docstrings" = [
    "+*",
    "-D100",
    "-D101",
    "-D102",
    "-D103",
    "-D106",
    "-D107",
    "-D401",
]
"flake8-quotes" = [
    "+*",
    "-Q000",
]
"flake8-isort" = [
    "+*",
    "-I001",
    "-I003",
    "-I005",
]
"flake8-bandit" = [
    "+*",
    "-S101",
]
"mccabe" = ["+*"]
"pycodestyle" = ["+*"]
"pyflakes" = [
    "+*",
]
"wemake-python-styleguide" = [
    "+*",
    "-WPS110",
    "-WPS111",
    "-WPS115",
    "-WPS118",
    "-WPS120",  # allow variables with trailing underscore
    "-WPS201",
    "-WPS204",
    "-WPS210",
    "-WPS211",
    "-WPS214",
    "-WPS221",
    "-WPS224",
    "-WPS225",  # allow multiple except in try block
    "-WPS226",
    "-WPS230",
    "-WPS231",
    "-WPS232",
    "-WPS238",  # allow multiple raises in function
    "-WPS305",  # allow f-strings
    "-WPS306",
    "-WPS326",
    "-WPS337",  # allow multi-line conditionals
    "-WPS338",
    "-WPS420",  # allow pass keyword
    "-WPS429",
    "-WPS430",  # allow nested functions
    "-WPS431",
    "-WPS432",
    "-WPS433",
    "-WPS435",
    "-WPS437",
    "-WPS463",  # Unsure what it means "Found a getter without a return value"
    "-WPS473",
    "-WPS503",
    "-WPS505",
    "-WPS604",  # allow pass inside 'class' body
]
